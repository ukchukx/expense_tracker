apiVersion: apps/v1
kind: Deployment
metadata:
  name: expense-tracker
  namespace: expense-tracker
  labels:
    app: expense-tracker
spec:
  replicas: 1
  selector:
    matchLabels:
      app: expense-tracker
  template:
    metadata:
      labels:
        app: expense-tracker
    spec:
      imagePullSecrets:
      - name: headless-commerce-package-access-token
      initContainers:
      - name: check-db-ready
        image: postgres:11.5
        command: ['sh', '-c', 'until pg_isready -h expense-tracker-db -p 5432; do echo waiting for database; sleep 2; done;']
      containers:
      - name: expense-tracker
        image: ghcr.io/headless-commerce/expense_tracker
        imagePullPolicy: Always
        ports:
        - containerPort: 4000
        readinessProbe:
          httpGet:
            path: /health/ready
            port: 4000
          initialDelaySeconds: 30
          periodSeconds: 30
        livenessProbe:
          httpGet:
            path: /health/live
            port: 4000
          initialDelaySeconds: 30
          periodSeconds: 30
        env:
        - name: ET_DB_USER
          value: 'expense_tracker'
        - name: ET_DB_PASS
          valueFrom:
            secretKeyRef:
              name: expense-tracker-secrets
              key: dbPass
        - name: ET_DB_HOST
          value: 'postgresql'
        - name: ET_DB_POOL_SIZE
          value: '10'
        - name: ET_READ_DB
          value: 'expense_tracker_reads'
        - name: ET_EVENT_DB
          value: 'expense_tracker_events'
        - name: ET_DNS_ADDR
          value: 'expense-tracker.moview.com.ng'
        - name: ET_HTTP_PORT
          value: '4000'
        - name: ET_SECRET_KEY_BASE
          valueFrom:
            secretKeyRef:
              name: expense-tracker-secrets
              key: secretKeyBase
---
kind: Service
apiVersion: v1
metadata:
  name: expense-tracker
  namespace: expense-tracker
spec:
  ports:
  - name: web
    port: 80
    targetPort: 4000
  selector:
    app: expense-tracker
---

apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: expense-tracker-web
  namespace: expense-tracker
spec:
  entryPoints:
    - web
  routes:
  - kind: Rule
    match: Host(`expense-tracker.moview.com.ng`)
    services:
    - name: expense-tracker
      port: 80
    middlewares:
    - name: security
      namespace: default
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: expense-tracker-web-tls
  namespace: expense-tracker
spec:
  entryPoints:
    - websecure
  routes:
  - kind: Rule
    match: Host(`expense-tracker.moview.com.ng`)
    services:
    - name: expense-tracker
      port: 80
    middlewares:
    - name: security
      namespace: default
  tls:
    certResolver: le
    domains:
    - main: "moview.com.ng"
      sans:
      - "*.moview.com.ng"
    options:
      name: mytlsoption
      namespace: default